---
slug: slice-the-web
date: 2015-08-03
title: "SLICE: The Web"
description: "What are the properties that make the web the web?  How can we keep differentiating from native to stay relevant in a mobile world?"
tags: ["headless", "slice", 'headless chrome', 'the headless web']
image_header: "/images/slice.jpg"
---


ここ数週間、ウェブのすべての問題について多くの会話が行われており、彼らは広く次のカテゴリに分類されています。


*パフォーマンス
* [ラッピー](/the-lumpy-web/)不一致のブラウザ
*急速に機能の広がりを広げる。

私は、ユーザーと開発者のためのプラットフォームとしてウェブの肯定的な側面を素早く記述するためにGoogleで使用した用語の1つについて素早く話すために、これらの情報を数分間脇に置いておきたいと思っています。

私はそれのための元の参照を見つけることができませんが、私が行くだろう根本的な点はよく知られています。 ** SLICE **は、2013年の基調講演でLinus Upsonによって最初に発表された[Chrome Dev Summit](https://developer.chrome.com/devsummit)です。 Linusがウェブのプロパティについて語ったとき、それは命名の正しい順序ではありませんでしたが、このビデオを見ることをお勧めします。 _Note_：Microsofter（以前のGoogle社）のBrett Cannonも最近これについて言及していますが、[良い読書](http://nothingbutsnark.svbtle.com/going-allin-on-the-mobile-web)であり、[Webアプリケーションを使用して生活する](https://paul.kinlan.me/living-with-web-apps/)

{{<youtube 20fGtfnxJuo>}}

<br>私はそれが良い点をたくさんカバーしていると思う：


* __S__ecure  - すべてのドメインは互いにサンドボックスされており、サイトはユーザーのマシンから離れてサンドボックスされています。ユーザーはどのサイトに行っても安全であることを知ることができます。
* __L__inkable  -  URLを共有するだけで、任意のページやコンテンツを指すことができます
* __I__ndexable  - あなたが何かにリンクすることができるので、公開されている場合は、それを索引付けして誰にでも普遍的に発見されるようにすることができる。
* __C__omposable  -  IframeとJavaScriptを使用すると、JSをドロップして物事をつなぎ合わせるだけで、新しいサイト、アプリ、サービスをすばやく作成して埋め込むことができます。
* __E__phemeral  - インストールするものは何もなく、ページに移動して対話し、ページから離れるときに、リソースを占有しなくなります。
**スライス**。

WebがSLICEの原則をカプセル化する一連の能力は、ネイティブプラットフォームの競争を考えるときによく知られていますが、しばしば忘れられています。

用語としては、** SLICE **は今日のWebの利点をすばやく解決する素晴らしい方法です。更新プログラムを即座に展開するなど、ウェブのメリットを逃してしまいます。 ** SLUICE **は大きな頭字語ではありません。しかし、それは大丈夫です** SLICE **頭字語としてうまくいきます。

私は** SLICE **モデルをウェブ*の未来に向けてベースラインとして使用し、そこに到達するために克服すべき挑戦と挑戦を使用します。


* __Secure  -  Webはサンドボックスのままで、エンドツーエンドで暗号化する必要があります。私たちはまた、ユーザーがコントロールしていることを保証するためのモデルと、高度なAPIに対するアクセス許可を認識する必要があります。たとえば、最近[Bluetooth API](https://developers.google.com/web/updates/2015/07/interact-with-ble-devices-on-the-web?hl=en)を出荷し始めました。使用するのは安全で安全です。
* __L__inkable  - 私はこれをWeb Intentsで開始しましたが、早期終了しましたが、私たちはコンテンツ、サイト、アプリ、ネイティブエクスペリエンスをつなぐ別の世代になると確信しています。新技術が必要なものもあれば、教育が必要なものもあります。
   * Web Appsへのリンク：別の時間に飛び込むつもりです。 TL;商品ランディングページとログインページは、Googleがウェブアプリにリンクするのに役立つものではありません。
   *メディアへのディープリンク：長い間ブラウザーはファイルのどの部分にもリンクすることができましたが、誰もそれをやっていないようです。
   *テキストへのより深いリンク：これを初めて見たのはDave Winerのブログで、どの段落にリンクしてもかまいませんでした。さらに最近では、すべての段落に深いリンクが与えられています。
   *リアルワールドオブジェクトのリンク：私たちの周りの「物」を発見するための[フィジカルウェブ](https://google.github.io/physical-web/)、これらの「物」と話すための新しいAPIは、私たちの毎日の生活における摩擦を減らします。
* __I__ndexable  - ヘッドレスWeb、つまりパーサーとインデクサーは、Web上にあるコンテンツの詳細を理解できるようになり、JSを実行し、ページのレンダリング方法を視覚的に理解することができますが、
   *埋め込まれたSchema.orgは意味論的に正しく記述できません（JSON + LD）
   *メディアには公開された膨大な量のメタデータが公開されていません。
   *アプリ：ウェブインテントは、ウェブアプリが何をすることができるかを説明する方法にしようとしました。私たちはそれ以上は持っていないし、Webアプリケーションが何ができるのかを記述する大規模な方法が欠けている。たとえ誰も自分のアプリでホーン機能を必要としないと思っても、私の[airhorn app](https://airhorner.com/)を取ると、メタデータを検索する以外の方法はありません。ウェブ上に商品ランディングページがあります。
   *インターネットに接続されたデバイスはインデックスが作成されておらず、自分ができることについては説明していません。フィジカルウェブのストーリーに欠けている機能です。私はIoTのWeb Intentsが必要なような気がします。
* __C__omposable  -  Webコンポーネントに言及するだけで簡単に言えますが、実際には、再利用可能なツール、ライブラリ、フレームワークの幅広いエコシステムについて話しています。
    *フレームワークがスタック全体を所有しようとしている現在、interopには大きな問題があります。
    *クライアントサイドの委任機能を解決する必要があります。ウェブインテントはこれを試しましたが、今日でもウェブ上ではまだ可能ですが、私たちはそれをしません。 QRコードスナッパーWebアプリケーションを作成したのですが、自分のアプリに統合するために自分で構築する必要があるのはなぜですか？
* __E__phemeral  -  2つの言葉：サービスワーカー。
  *インストール可能性は、耐性の対立です。それは非常に定義されているため、何かをインストールすると、デバイスの長期間に渡って統合された部分になります。サービスワーカーは、どちらの場面においても、サイトをどのようにしてより深くデバイスに統合すべきかを選択できる中盤を提供します。これをマニフェストと組み合わせれば、ユーザーは「Webアプリケーション」をインストールするか、必要に応じて対話するかを選択できます。


**私たちは何が欠けているのですか？**私はそれを残すつもりです。私はネイティブ・プラットフォームが** SLICE **モデルをどのように使って、ユーザーの日々の生活にさらにネイティブ・アプリを浸透させる方法として、そしてウェブさらに差別化することができます。

イメージクレジット：[Justus Hayes](https://commons.wikimedia.org/wiki/File:The_Big_Slice_-_Rome,_Italy.jpg)