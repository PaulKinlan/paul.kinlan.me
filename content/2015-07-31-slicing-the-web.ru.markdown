---
slug: slice-the-web
date: 2015-08-03
title: "SLICE: The Web"
description: "What are the properties that make the web the web?  How can we keep differentiating from native to stay relevant in a mobile world?"
tags: ["headless", "slice", 'headless chrome', 'the headless web']
image_header: "/images/slice.jpg"
---


За последние пару недель много разговоров обо всех проблемах сети, и они в целом группируются в следующие категории:


* Представление
* [Lumpy](/the-lumpy-web/) несогласованные браузеры
* Быстро расширяющийся ландшафт.

Я хочу поставить их в стороне на пару минут, чтобы быстро рассказать об одном из терминов, которые мы использовали в Google, чтобы быстро описать положительные аспекты Интернета как платформы для пользователей и разработчиков: ** SLICE **.

Я не могу найти для него оригинальную ссылку, но основные моменты, которые я буду вдаваться, хорошо известны. ** SLICE ** была упомянута на первом [Chrome Dev Summit](https://developer.chrome.com/devsummit) Линусом Апсоном в лейбле в 2013 году. Когда Линус говорил о свойствах сети, это было не в правильном порядке для именования, но я рекомендую вам посмотреть это видео. _Note_: Бретт Кэннон, Microsofter (ранее Googler) также недавно упомянул об этом, и это [хорошее чтение](http://nothingbutsnark.svbtle.com/going-allin-on-the-mobile-web), и в целом аналогичные выводы относятся к моему сообщению о [Living with Web Apps](https://paul.kinlan.me/living-with-web-apps/)

{{<youtube 20fGtfnxJuo>}}

<br> Я думаю, что он охватывает много хороших моментов:


* __S__ecure - все домены помещаются в песок друг от друга, а сайты удаляются песком вдали от пользовательской машины. Пользователь может перейти на любой сайт и знать, что он в безопасности.
* __L__inkable - вы можете указать любую страницу или часть контента, просто поделившись URL-адресом
* __I__ndexable - поскольку вы можете ссылаться на что угодно, если публикация может быть обнаружена любым человеком или машиной, которая может индексировать ее, чтобы сделать ее универсальной для всех.
* __C__omposable - Iframes и JavaScript позволяют нам быстро создавать и внедрять новые сайты, приложения и сервисы, просто отбросив некоторые JS и объединяя их.
* __E__phemeral - установить нечего, вы переходите на страницу и взаимодействуете с ней, оставьте страницу, и когда вы ее прекратите, забираете ресурсы.
**КУСОЧЕК**.

Как набор способностей, которые веб-инкапсулирует принципы SLICE, хорошо известны, но часто забываются при рассмотрении конкуренции на собственных платформах.

В качестве термина я считаю, что ** SLICE ** - отличный способ быстро решить преимущества Интернета сегодня. Он пропускает несколько основных преимуществ Интернета, таких как возможность мгновенного развертывания обновлений & mdash; ** SLUICE ** не является отличным акронимом; но это нормально, ** SLICE ** как акроним хорошо работает.

Я использую модель ** SLICE ** в качестве базовой линии для того, где мы идем с будущим в Интернете, и о проблемах, с которыми мы сталкиваемся, и их необходимо преодолеть, чтобы добраться туда.


* __S__ecure - Интернет должен оставаться в песочнице, и он должен быть сквозным зашифрованным. Нам также нужно выяснить, что такое модель для обеспечения того, чтобы пользователь контролировал и понимал, как разрешено использование расширенных API. Например, мы недавно начали отправлять [Bluetooth API](https://developers.google.com/web/updates/2015/07/interact-with-ble-devices-on-the-web?hl=en), как вы даете пользователям уверенность что он безопасен и безопасен в использовании.
* __L__inkable - я начал это с Web Intents, и, хотя он закончился рано, я считаю, что мы должны за другое поколение связывания контента, сайтов, приложений и собственного опыта. Для некоторых из них требуются новые технологии, некоторые из которых требуют образования.
   * Присоединение к веб-приложениям: я собираюсь погрузиться в это другое время. TL; DR - целевые страницы продукта и страницы входа не помогают нам связываться с веб-приложениями.
   * Глубокая привязка к медиа: браузеры в течение длительного времени могли ссылаться на любую часть файла, но никто, кажется, не делает этого.
   * Более глубокое связывание текста: в первый раз я увидел, что это блог Дейва Винера, где вы могли бы ссылаться на любой абзац, а в последнее время Medium дают каждому абзацу глубокую ссылку.
   * Связывание объектов реального мира: [Физическая сеть](https://google.github.io/physical-web/) для обнаружения «вещей» вокруг нас, а новые API для общения с этими «вещами» уменьшат трение в наших повседневных жизнях.
* __I__ndexable - безглазная сеть, т. Е. Синтаксические анализаторы и индексы становятся более продвинутыми, позволяя нам больше понимать контент, который находится в Интернете, они будут запускать JS и визуально понимать, как выглядит страница, но есть еще много проблем:
   * Embedded Schema.org не может описать семантически правильно (следовательно, JSON + LD)
   * СМИ не имеют большого количества метаданных, открытых в общедоступном формате.
   * Приложения: веб-намерение пыталось быть способом, который описывает, что может сделать веб-приложение. У нас этого больше нет, и нам не хватает массового способа описать возможности того, что может сделать веб-приложение. Возьмите мое приложение [airhorn](https://airhorner.com/) в качестве примера, хотя я ожидаю, что кому-то не понадобятся функции рога в своем приложении, нет способа найти его, кроме поиска метаданных, и это одна из причин, почему у нас есть целевые страницы продукта в Интернете.
   * Устройства, подключенные к Интернету, не индексируются, и они не описывают, что они могут делать. Это недостающая часть для моей истории в Physical Web, открывающая возможности. Я чувствую, что нам нужны веб-намерения для IoT.
* __C__omposable. Было бы легко упомянуть только упоминание веб-компонентов, но на самом деле мы говорим о более широкой экосистеме многоразовых инструментов, библиотек и фреймворков:
    * На данный момент существуют массивные проблемы взаимодействия, так как структуры пытаются владеть всем стеком.
    * Нам нужно решить делегированные функции на стороне клиента. Веб-намерения попробовали это, но многое из этого возможно в Интернете сегодня, но мы этого не делаем. Т.е., я создал веб-приложение для привязки QR-кода, почему вам нужно построить его самостоятельно, чтобы интегрировать его в свое приложение, просто используйте мой или любой другой ранее существующий сервис.
* __E__phemeral - два слова: рабочий службы.
  * Устойчивость - это антитеза Эмфемерности. По самому определению, когда вы устанавливаете что-то, он становится долгой и интегрированной частью устройства. Сервисный рабочий может использовать лучшее из обоих миров: средний уровень позволяет вам выбирать, как и когда сайт должен быть интегрирован глубже в устройство. Объедините это с манифестом, и теперь у пользователя есть выбор установки «веб-приложения» или сохранения его как необходимого взаимодействия.


** Итак, что нам не хватает? ** Я собираюсь оставить это для вас, чтобы рассказать мне, я подозреваю, что я много не хватает. У меня есть набор последующих сообщений, в которых я расскажу о том, как собственные платформы берут кусочек из ** модели SLICE ** для себя как способ укрепить собственные приложения дальше в повседневной жизни пользователей и как веб-сайт может дифференцироваться еще дальше.

Image Credit: [Justus Hayes](https://commons.wikimedia.org/wiki/File:The_Big_Slice_-_Rome,_Italy.jpg)