---
slug: re-some-things-about-xlinq
date: 2006-06-09
 
title: "RE: Some things about XLinq"
published: true
---
This is a response to the comment on my blog (<a href="http://www.kinlan.co.uk/2006/05/some-things-about-xlinq.html">http://www.kinlan.co.uk/2006/05/some-things-about-xlinq.html</a>) by Mike Champion<p />Firstly, I can point to the XML file for you easily.  It is the Wikipedia XML Abstract file (<a href="http://download.wikimedia.org/enwiki/20060518/enwiki-20060518-abstract.xml" target="_blank">http://download.wikimedia.org/enwiki/20060518/enwiki-20060518-abstract.xml </a>).  The format of it is pretty rigid, I am not too sure if there is a schema available but you can see that it is pretty self explanitory, there is no header information (from what I can remember) and it is one large document.<p />In my example that I was playing with, I ended up using an XMLReader and it was blazingly quick.   Additionally I had to do a bit of logic (inserts in to a hash table) based on the content of each node and I couldn't work out how to do it in XLinq, I still find the syntax a little bit odd and the lambda syntax don't always come accross as easy to read for me at least.<p />The project I was working on would take the XML and convert it into a series of SQL statements, from the XML I would take the "title" element and relate the child "sublink" entities with its parent (in a custom data structure), now although the XML data is in a tree structure, the resulting data is in a cyclic graph structure because the child sublink entities may have more than one parent and also may also be a parent element itself linking (its children being one of its parents).  This was very simple to do when itterating accross the data because I could ignore the bits of the data that I didn't need and only construct custom data strcutures out of the bits I did.  I would then itterate across the final data strcuture and convert it into SQL statements.<p />I wouldn't have minded doing the work in several XLinq expressions if that was the only way of doing it, but that would have been even less feasible because the data would get copied several times and would also exist several times too (as well as scanning over all the data several times) and I would quickly run out of memory.<p />I think I understand the concept of the XStreamingElement, but the only benefit I can see at the moment is that it stops the internals having to do two scans of the data, one to construct the data and one to then output the data.  This concept makes sense though (I think).<p />The feature I would like to see is the simillar as this (conceptually), but the loading/parsing of the data is deferred until I start to generate the output or do my itterations. I personally cannot think of situations where a single read over the XML data at query execution time cannot be used (thus avoiding loading all the data and then itterating over the data) and thus not having to load all the data into memory.  Simple Selects, Wheres and Counts could all be constructed in a single pass.  Joins would be harder but file index posistions could be kept to ensure that quick access to the joining key would be kept so that the whole document still does not need to be loaded.<p />I can't see the need to define a schema (suggestion a in the original comment )in the XML sense when itterating accross the data, the developer is already defining a schema when they do the XLinq expressions but they are only defining what they want to consume, if I was to say select all titles from an xml document (like the wikimedia abstract document) where the value in the title has 24 characters and return the string value then I don't really care about the sibling nodes so why do they need to get loaded in to memory. If I were to return XElements for each of the elements in a document where the title node has 24 charatcers then I would have really thought that you can load the elements in as and when the approriate title node has been found.  If any execution is needed on these elements because they have been constructed then they could easily be parsed and used because they are needed.<p />I really do dislike having to load all the data in to memory at once when I am only using a small slice of it. <p />I really would like to be able to defer the loading of the data until the time it is needed (this I think would be awkward if you inspected the same XDocument twice - I can see why two disc scans of the data might be bad).<p />I don't like the idea of saying to a customer you have reached an upper limit revert back to the old way of doing things.  I expect you would see a lot of complaints from people saying that XLinq won't scale and that they had to re-design their app completly because of this.  Do you know of any hard and fast limit to the amount of data that can be processed? Is their a formula? Use XLinq when XML Document size <br />Thats about it for now I think :)<p />I hope this helps,if you have any questions or this email doesn't make sense I will gladly expand on the points.<p /><table class="TechnoratiHead TagHeader">
<tr><td>Related Tags</td></tr>
<tr class="Technorati"><td>
<a href="http://www.kinlan.co.uk/tag/xml" class="Tag" rel="tag">xml</a> <a href="http://www.kinlan.co.uk/tag/sql%20statements" class="Tag" rel="tag">sql statements</a> <a href="http://www.kinlan.co.uk/tag/wikimedia" class="Tag" rel="tag">wikimedia</a> <a href="http://www.kinlan.co.uk/tag/parent%20element" class="Tag" rel="tag">parent element</a> <a href="http://www.kinlan.co.uk/tag/syntax" class="Tag" rel="tag">syntax</a> <a href="http://www.kinlan.co.uk/tag/entities" class="Tag" rel="tag">entities</a> <a href="http://www.kinlan.co.uk/tag/xmlreader" class="Tag" rel="tag">xmlreader</a> <a href="http://www.kinlan.co.uk/tag/graph%20structure" class="Tag" rel="tag">graph structure</a> <a href="http://www.kinlan.co.uk/tag/hash%20table" class="Tag" rel="tag">hash table</a> <a href="http://www.kinlan.co.uk/tag/mike%20champion" class="Tag" rel="tag">mike champion</a> <a href="http://www.kinlan.co.uk/tag/cyclic%20graph" class="Tag" rel="tag">cyclic graph</a> <a href="http://www.kinlan.co.uk/tag/custom%20data" class="Tag" rel="tag">custom data</a> <a href="http://www.kinlan.co.uk/tag/XLinq" class="Tag" rel="tag">XLinq</a> <a href="http://www.kinlan.co.uk/tag/Linq" class="Tag" rel="tag">Linq</a> <a href="http://www.kinlan.co.uk/tag/.Net" class="Tag" rel="tag">.Net</a> <a href="http://www.kinlan.co.uk/tag/C%233.0" class="Tag" rel="tag">C#3.0</a>
</td></tr>
</table><br /><table class="TechnoratiHead TagHeader">
<tr><td>Related Wikipedia Documents</td></tr>
<tr class="Technorati"><td>
<a href="http://en.wikipedia.org/wiki/XML" class="Tag" rel="tag">XML</a>, <a href="http://en.wikipedia.org/wiki/XPath" class="Tag" rel="tag">XPath</a>
</td></tr>
</table><br /><table class="TechnoratiHead TagHeader">
<tr><td>My Related Documents</td></tr>
<tr class="Technorati"><td>
<a href="http://www.kinlan.co.uk/2006/05/some-things-about-xlinq.html" class="Tag" rel="tag">C#, .Net Framework: Some things about XLinq</a>, <a href="http://www.kinlan.co.uk/2006/05/c-30-and-xlinq.html" class="Tag" rel="tag">C#, .Net Framework: C# 3.0 and XLinq</a>, <a href="http://www.kinlan.co.uk/2006/05/c-30.html" class="Tag" rel="tag">C#, .Net Framework: C# 3.0</a>, <a href="http://www.kinlan.co.uk/2005/07/c-30-xml-generics-again.html" class="Tag" rel="tag">C#, .Net Framework: C# 3.0 XML Generics Again</a>, <a href="http://www.kinlan.co.uk/2005/09/c-30-and-linq.html" class="Tag" rel="tag">C#, .Net Framework: C# 3.0 and LINQ</a>, <a href="http://www.kinlan.co.uk/2005/09/c-30-ugh.html" class="Tag" rel="tag">C#, .Net Framework: C# 3.0. Ugh!</a>
</td></tr>
</table><br /><table class="TechnoratiHead TagHeader">
<tr><td>Related Amazon Books</td></tr>
<tr class="Technorati"><td>Sams Teach Yourself XML in 24 Hours: Complete Starter Kit (Sams Teach Yourself S.): <a href="http://www.amazon.co.uk/exec/obidos/redirect?tag=cnetfra-21&amp;link_code=xm2&amp;camp=2025&amp;creative=165953&amp;path=http://www.amazon.co.uk/gp/redirect.html%253fASIN=067232797X%2526tag=cnetfra-21%2526lcode=xm2%2526cID=2025%2526ccmID=165953%2526location=/o/ASIN/067232797X%25253FSubscriptionId=0CM2PVF6VAHJQKW5G782" class="Tag" rel="tag">View From Amazon UK</a>/<a href="http://www.amazon.com/exec/obidos/redirect?tag=cnetfra-20&amp;link_code=xm2&amp;camp=2025&amp;creative=165953&amp;path=http://www.amazon.com/gp/redirect.html%253fASIN=067232797X%2526tag=cnetfra-20%2526lcode=xm2%2526cID=2025%2526ccmID=165953%2526location=/o/ASIN/067232797X%25253FSubscriptionId=0CM2PVF6VAHJQKW5G782" class="Tag" rel="tag">View From Amazon USA</a> Service-oriented Architecture: A Field Guide to Integrating XML and Web Services: <a href="http://www.amazon.co.uk/exec/obidos/redirect?tag=cnetfra-21&amp;link_code=xm2&amp;camp=2025&amp;creative=165953&amp;path=http://www.amazon.co.uk/gp/redirect.html%253fASIN=0131428985%2526tag=cnetfra-21%2526lcode=xm2%2526cID=2025%2526ccmID=165953%2526location=/o/ASIN/0131428985%25253FSubscriptionId=0CM2PVF6VAHJQKW5G782" class="Tag" rel="tag">View From Amazon UK</a>/<a href="http://www.amazon.com/exec/obidos/redirect?tag=cnetfra-20&amp;link_code=xm2&amp;camp=2025&amp;creative=165953&amp;path=http://www.amazon.com/gp/redirect.html%253fASIN=0131428985%2526tag=cnetfra-20%2526lcode=xm2%2526cID=2025%2526ccmID=165953%2526location=/o/ASIN/0131428985%25253FSubscriptionId=0CM2PVF6VAHJQKW5G782" class="Tag" rel="tag">View From Amazon USA</a> MCAD Training Guide 70-320: Developing XML Web Services and Server Components with Visual C#.NET and the .NET Framework: <a href="http://www.amazon.co.uk/exec/obidos/redirect?tag=cnetfra-21&amp;link_code=xm2&amp;camp=2025&amp;creative=165953&amp;path=http://www.amazon.co.uk/gp/redirect.html%253fASIN=0789728249%2526tag=cnetfra-21%2526lcode=xm2%2526cID=2025%2526ccmID=165953%2526location=/o/ASIN/0789728249%25253FSubscriptionId=0CM2PVF6VAHJQKW5G782" class="Tag" rel="tag">View From Amazon UK</a>/<a href="http://www.amazon.com/exec/obidos/redirect?tag=cnetfra-20&amp;link_code=xm2&amp;camp=2025&amp;creative=165953&amp;path=http://www.amazon.com/gp/redirect.html%253fASIN=0789728249%2526tag=cnetfra-20%2526lcode=xm2%2526cID=2025%2526ccmID=165953%2526location=/o/ASIN/0789728249%25253FSubscriptionId=0CM2PVF6VAHJQKW5G782" class="Tag" rel="tag">View From Amazon USA</a> Custom CGI Scripting with Perl: <a href="http://www.amazon.co.uk/exec/obidos/redirect?tag=cnetfra-21&amp;link_code=xm2&amp;camp=2025&amp;creative=165953&amp;path=http://www.amazon.co.uk/gp/redirect.html%253fASIN=0471395978%2526tag=cnetfra-21%2526lcode=xm2%2526cID=2025%2526ccmID=165953%2526location=/o/ASIN/0471395978%25253FSubscriptionId=0CM2PVF6VAHJQKW5G782" class="Tag" rel="tag">View From Amazon UK</a>/<a href="http://www.amazon.com/exec/obidos/redirect?tag=cnetfra-20&amp;link_code=xm2&amp;camp=2025&amp;creative=165953&amp;path=http://www.amazon.com/gp/redirect.html%253fASIN=0471395978%2526tag=cnetfra-20%2526lcode=xm2%2526cID=2025%2526ccmID=165953%2526location=/o/ASIN/0471395978%25253FSubscriptionId=0CM2PVF6VAHJQKW5G782" class="Tag" rel="tag">View From Amazon USA</a> Topological Structure and Analysis of Interconnection Networks (Network Theory &amp; Applications S.): <a href="http://www.amazon.co.uk/exec/obidos/redirect?tag=cnetfra-21&amp;link_code=xm2&amp;camp=2025&amp;creative=165953&amp;path=http://www.amazon.co.uk/gp/redirect.html%253fASIN=1402000200%2526tag=cnetfra-21%2526lcode=xm2%2526cID=2025%2526ccmID=165953%2526location=/o/ASIN/1402000200%25253FSubscriptionId=0CM2PVF6VAHJQKW5G782" class="Tag" rel="tag">View From Amazon UK</a>/<a href="http://www.amazon.com/exec/obidos/redirect?tag=cnetfra-20&amp;link_code=xm2&amp;camp=2025&amp;creative=165953&amp;path=http://www.amazon.com/gp/redirect.html%253fASIN=1402000200%2526tag=cnetfra-20%2526lcode=xm2%2526cID=2025%2526ccmID=165953%2526location=/o/ASIN/1402000200%25253FSubscriptionId=0CM2PVF6VAHJQKW5G782" class="Tag" rel="tag">View From Amazon USA</a> Professional ASP.NET 2.0: <a href="http://www.amazon.co.uk/exec/obidos/redirect?tag=cnetfra-21&amp;link_code=xm2&amp;camp=2025&amp;creative=165953&amp;path=http://www.amazon.co.uk/gp/redirect.html%253fASIN=0764576100%2526tag=cnetfra-21%2526lcode=xm2%2526cID=2025%2526ccmID=165953%2526location=/o/ASIN/0764576100%25253FSubscriptionId=0CM2PVF6VAHJQKW5G782" class="Tag" rel="tag">View From Amazon UK</a>/<a href="http://www.amazon.com/exec/obidos/redirect?tag=cnetfra-20&amp;link_code=xm2&amp;camp=2025&amp;creative=165953&amp;path=http://www.amazon.com/gp/redirect.html%253fASIN=0764576100%2526tag=cnetfra-20%2526lcode=xm2%2526cID=2025%2526ccmID=165953%2526location=/o/ASIN/0764576100%25253FSubscriptionId=0CM2PVF6VAHJQKW5G782" class="Tag" rel="tag">View From Amazon USA</a> Pro C# 2005 &amp; the .NET 2.0 Platform: <a href="http://www.amazon.co.uk/exec/obidos/redirect?tag=cnetfra-21&amp;link_code=xm2&amp;camp=2025&amp;creative=165953&amp;path=http://www.amazon.co.uk/gp/redirect.html%253fASIN=1590594193%2526tag=cnetfra-21%2526lcode=xm2%2526cID=2025%2526ccmID=165953%2526location=/o/ASIN/1590594193%25253FSubscriptionId=0CM2PVF6VAHJQKW5G782" class="Tag" rel="tag">View From Amazon UK</a>/<a href="http://www.amazon.com/exec/obidos/redirect?tag=cnetfra-20&amp;link_code=xm2&amp;camp=2025&amp;creative=165953&amp;path=http://www.amazon.com/gp/redirect.html%253fASIN=1590594193%2526tag=cnetfra-20%2526lcode=xm2%2526cID=2025%2526ccmID=165953%2526location=/o/ASIN/1590594193%25253FSubscriptionId=0CM2PVF6VAHJQKW5G782" class="Tag" rel="tag">View From Amazon USA</a>
</td></tr>
</table><br /><table class="TechnoratiHead TagHeader">
<tr><td>Related Images From Flickr</td></tr>
<tr class="Technorati"><td>
<span style="float: left;">[[posterous-content:gxucwzwBHIpgmoenDFjD]]</span><span style="float: left;">[[posterous-content:EpmkjbnHntJtvluyeHlc]]</span><span style="float: left;">[[posterous-content:GvodjHhuIkxDDIxsHuvi]]</span><span style="float: left;">[[posterous-content:sptmojdbpBechnrrkrAw]]</span>
</td></tr>
</table>

