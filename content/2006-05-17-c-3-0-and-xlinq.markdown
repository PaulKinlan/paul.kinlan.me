---
slug: c-3-0-and-xlinq
date: 2006-05-17
 
title: C# 3.0 and XLinq
published: true
---
I have just been playing around a little with C#3.0 with XLinq trying to see how easy it would be to parse a simple xml document and create a list of strongly type objects out.<p />I had fun doing this and I will show you what I was doing so that you can either:<br />a) learn a little of what I learnt<br />b) tell me where I am going wrong, i.e, if there is a simpler method.<p />The XML file I am trying to parse is the MusizMox Style XML Document <a href="http://musicmoz.org/xml/musicmoz.lists.styles.xml">http://musicmoz.org/xml/musicmoz.lists.styles.xml</a>:<p />&lt;musicmoz&gt;<br />&lt;style&gt;<br />&lt;name&gt;A Cappella&lt;/name&gt;<br />&lt;category&gt;Styles/Vocal/A_Cappella&lt;/category&gt;<br />&lt;/style&gt;<br />&lt;style&gt;<br />&lt;name&gt;Acadian&lt;/name&gt;<br />&lt;category&gt;Styles/World/Cajun/Acadian&lt;/category&gt;<br />&lt;/style&gt;<br />...<br />...<p />And I want to produce a List of Name and Categories.<p />First I created a class as follows:<br />public class TagCategory<br />{<br />public string Name<br />{<br />get{return name;}<br />set{name = value;}<br />}<p />public string Category<br />{<br />get{return category;}<br />set{category = value;}<br />}<p />private string name;<br />private string category;<br />}<p />This is just a really simple class that holds the tag name and the category of the style.<p />Now comes the interesting part. The C#3.0 bit. I used XLinq with this, it is only a couple of lines, but it seems to be pretty cool.<p />Firtly I need to load the XML file, which is simple enough:<br />XDocument xdoc = XDocument.Load("musicmoz.lists.styles.xml");<br />XElement root = xdoc.Element("musicmoz");<p />Now that it is loaded I simple declare a List and run some XLinq as follows:<p />List t = new List(<br />root.Elements("style")<br />.Select(<br />a =&gt; new TagCategory{ Name = a.Element("name").Value,<br />Category = a.Element("category").Value}<br />)<br />);<p />What I can tell is happening is that we are looking at the root element and pulling back all the "style" elements, then for each element Select all of them but return a new TagCategory using object initilaizers for the Name and the Category class properties.<p />Clear as mud! :)<p />Any questions let me know and I will try and answer them :) <a href="mailto:paul.kinlan@gmail.com">paul.kinlan@gmail.com</a><p />


