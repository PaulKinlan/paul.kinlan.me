---
slug: c-3-0-and-xlinq
date: 2006-05-17
 
title: C# 3.0 and XLinq
published: true
---
I have just been playing around a little with C#3.0 with XLinq trying to see how easy it would be to parse a simple xml document and create a list of strongly type objects out.<p />I had fun doing this and I will show you what I was doing so that you can either:<br />a) learn a little of what I learnt<br />b) tell me where I am going wrong, i.e, if there is a simpler method.<p />The XML file I am trying to parse is the MusizMox Style XML Document <a href="http://musicmoz.org/xml/musicmoz.lists.styles.xml">http://musicmoz.org/xml/musicmoz.lists.styles.xml</a>:<p />&lt;musicmoz&gt;<br />&lt;style&gt;<br />&lt;name&gt;A Cappella&lt;/name&gt;<br />&lt;category&gt;Styles/Vocal/A_Cappella&lt;/category&gt;<br />&lt;/style&gt;<br />&lt;style&gt;<br />&lt;name&gt;Acadian&lt;/name&gt;<br />&lt;category&gt;Styles/World/Cajun/Acadian&lt;/category&gt;<br />&lt;/style&gt;<br />...<br />...<p />And I want to produce a List of Name and Categories.<p />First I created a class as follows:<br />public class TagCategory<br />{<br />public string Name<br />{<br />get{return name;}<br />set{name = value;}<br />}<p />public string Category<br />{<br />get{return category;}<br />set{category = value;}<br />}<p />private string name;<br />private string category;<br />}<p />This is just a really simple class that holds the tag name and the category of the style.<p />Now comes the interesting part. The C#3.0 bit. I used XLinq with this, it is only a couple of lines, but it seems to be pretty cool.<p />Firtly I need to load the XML file, which is simple enough:<br />XDocument xdoc = XDocument.Load("musicmoz.lists.styles.xml");<br />XElement root = xdoc.Element("musicmoz");<p />Now that it is loaded I simple declare a List and run some XLinq as follows:<p />List t = new List(<br />root.Elements("style")<br />.Select(<br />a =&gt; new TagCategory{ Name = a.Element("name").Value,<br />Category = a.Element("category").Value}<br />)<br />);<p />What I can tell is happening is that we are looking at the root element and pulling back all the "style" elements, then for each element Select all of them but return a new TagCategory using object initilaizers for the Name and the Category class properties.<p />Clear as mud! :)<p />Any questions let me know and I will try and answer them :) <a href="mailto:paul.kinlan@gmail.com">paul.kinlan@gmail.com</a><p /><table class="TechnoratiHead TagHeader">
<tr><td>Related Tags</td></tr>
<tr class="Technorati"><td>
<a href="http://www.kinlan.co.uk/tag/xml%20document" class="Tag" rel="tag">xml document</a> <a href="http://www.kinlan.co.uk/tag/xml%20file" class="Tag" rel="tag">xml file</a> <a href="http://www.kinlan.co.uk/tag/parse" class="Tag" rel="tag">parse</a> <a href="http://www.kinlan.co.uk/tag/xlinq" class="Tag" rel="tag">xlinq</a> <a href="http://www.kinlan.co.uk/tag/c%233.0" class="Tag" rel="tag">c#3.0</a> <a href="http://www.kinlan.co.uk/tag/linq" class="Tag" rel="tag">linq</a> <a href="http://www.kinlan.co.uk/tag/xml" class="Tag" rel="tag">xml</a> <a href="http://www.kinlan.co.uk/tag/select" class="Tag" rel="tag">select</a> <a href="http://www.kinlan.co.uk/tag/.Net" class="Tag" rel="tag">.Net</a>
</td></tr>
</table>
<br /><table class="TechnoratiHead TagHeader">
<tr><td>Related Wikipedia Documents</td></tr>
<tr class="Technorati"><td>
<a href="http://en.wikipedia.org/wiki/XML" class="Tag" rel="tag">XML</a>, <a href="http://en.wikipedia.org/wiki/C_Sharp" class="Tag" rel="tag">C Sharp</a>, <a href="http://en.wikipedia.org/wiki/Type_inference" class="Tag" rel="tag">Type inference</a>, <a href="http://en.wikipedia.org/wiki/LINQ" class="Tag" rel="tag">LINQ</a>
</td></tr>
</table>
<br /><table class="TechnoratiHead TagHeader">
<tr><td>My Related Documents</td></tr>
<tr class="Technorati"><td>
<a href="http://www.kinlan.co.uk/2005/09/c-30-and-linq.html" class="Tag" rel="tag">C#, .Net Framework: C# 3.0 and LINQ</a>, <a href="http://www.kinlan.co.uk/2005/07/c-30-xml-generics-again.html" class="Tag" rel="tag">C#, .Net Framework: C# 3.0 XML Generics Again</a>, <a href="http://www.kinlan.co.uk/2006/02/microsoft-feed-manager-api.html" class="Tag" rel="tag">C#, .Net Framework: Microsoft Feed Manager API</a>, <a href="http://www.kinlan.co.uk/2005/09/c-30-ugh.html" class="Tag" rel="tag">C#, .Net Framework: C# 3.0. Ugh!</a>, <a href="http://www.kinlan.co.uk/2005/07/c-generics-30.html" class="Tag" rel="tag">C#, .Net Framework: c# generics 3.0</a>
</td></tr>
</table>
<br /><table class="TechnoratiHead TagHeader">
<tr><td>Related Amazon Books</td></tr>
<tr class="Technorati"><td>XML in a Nutshell: <a href="http://www.amazon.co.uk/exec/obidos/redirect?tag=cnetfra-21&amp;link_code=xm2&amp;camp=2025&amp;creative=165953&amp;path=http://www.amazon.co.uk/gp/redirect.html%253fASIN=0596007647%2526tag=cnetfra-21%2526lcode=xm2%2526cID=2025%2526ccmID=165953%2526location=/o/ASIN/0596007647%25253FSubscriptionId=0CM2PVF6VAHJQKW5G782" class="Tag" rel="tag">View From Amazon UK</a>/<a href="http://www.amazon.com/exec/obidos/redirect?tag=cnetfra-20&amp;link_code=xm2&amp;camp=2025&amp;creative=165953&amp;path=http://www.amazon.com/gp/redirect.html%253fASIN=0596007647%2526tag=cnetfra-20%2526lcode=xm2%2526cID=2025%2526ccmID=165953%2526location=/o/ASIN/0596007647%25253FSubscriptionId=0CM2PVF6VAHJQKW5G782" class="Tag" rel="tag">View From Amazon USA</a> XML Schema: <a href="http://www.amazon.co.uk/exec/obidos/redirect?tag=cnetfra-21&amp;link_code=xm2&amp;camp=2025&amp;creative=165953&amp;path=http://www.amazon.co.uk/gp/redirect.html%253fASIN=0596002521%2526tag=cnetfra-21%2526lcode=xm2%2526cID=2025%2526ccmID=165953%2526location=/o/ASIN/0596002521%25253FSubscriptionId=0CM2PVF6VAHJQKW5G782" class="Tag" rel="tag">View From Amazon UK</a>/<a href="http://www.amazon.com/exec/obidos/redirect?tag=cnetfra-20&amp;link_code=xm2&amp;camp=2025&amp;creative=165953&amp;path=http://www.amazon.com/gp/redirect.html%253fASIN=0596002521%2526tag=cnetfra-20%2526lcode=xm2%2526cID=2025%2526ccmID=165953%2526location=/o/ASIN/0596002521%25253FSubscriptionId=0CM2PVF6VAHJQKW5G782" class="Tag" rel="tag">View From Amazon USA</a> Xml: Learning by Example: <a href="http://www.amazon.co.uk/exec/obidos/redirect?tag=cnetfra-21&amp;link_code=xm2&amp;camp=2025&amp;creative=165953&amp;path=http://www.amazon.co.uk/gp/redirect.html%253fASIN=1887902805%2526tag=cnetfra-21%2526lcode=xm2%2526cID=2025%2526ccmID=165953%2526location=/o/ASIN/1887902805%25253FSubscriptionId=0CM2PVF6VAHJQKW5G782" class="Tag" rel="tag">View From Amazon UK</a>/<a href="http://www.amazon.com/exec/obidos/redirect?tag=cnetfra-20&amp;link_code=xm2&amp;camp=2025&amp;creative=165953&amp;path=http://www.amazon.com/gp/redirect.html%253fASIN=1887902805%2526tag=cnetfra-20%2526lcode=xm2%2526cID=2025%2526ccmID=165953%2526location=/o/ASIN/1887902805%25253FSubscriptionId=0CM2PVF6VAHJQKW5G782" class="Tag" rel="tag">View From Amazon USA</a> Link Analysis: An Information Science Approach (Library &amp; Information Science S.): <a href="http://www.amazon.co.uk/exec/obidos/redirect?tag=cnetfra-21&amp;link_code=xm2&amp;camp=2025&amp;creative=165953&amp;path=http://www.amazon.co.uk/gp/redirect.html%253fASIN=0120885530%2526tag=cnetfra-21%2526lcode=xm2%2526cID=2025%2526ccmID=165953%2526location=/o/ASIN/0120885530%25253FSubscriptionId=0CM2PVF6VAHJQKW5G782" class="Tag" rel="tag">View From Amazon UK</a>/<a href="http://www.amazon.com/exec/obidos/redirect?tag=cnetfra-20&amp;link_code=xm2&amp;camp=2025&amp;creative=165953&amp;path=http://www.amazon.com/gp/redirect.html%253fASIN=0120885530%2526tag=cnetfra-20%2526lcode=xm2%2526cID=2025%2526ccmID=165953%2526location=/o/ASIN/0120885530%25253FSubscriptionId=0CM2PVF6VAHJQKW5G782" class="Tag" rel="tag">View From Amazon USA</a>
</td></tr>
</table>
<br /><table class="TechnoratiHead TagHeader">
<tr><td>Related Images From Flickr</td></tr>
<tr class="Technorati"><td>
<span style="float: left;">[[posterous-content:iIsFngkrDrebzIgvxIhC]]</span><span style="float: left;">[[posterous-content:IaqpmgrGbcGmhiwGCisD]]</span><span style="float: left;">[[posterous-content:eHtiejdrbJrIHraEIFqh]]</span><span style="float: left;">[[posterous-content:GCIEvGtpElcamlouwrjA]]</span>
</td></tr>
</table>


